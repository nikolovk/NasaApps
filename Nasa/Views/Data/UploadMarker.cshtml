@model Nasa.Models.Marker

@{
    ViewBag.Title = "UploadMarker";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>UploadMarker</h2>

@using (Html.BeginForm("AddMarker", "Data"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Marker</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Content)
            @Html.ValidationMessageFor(model => model.Content)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            <select name="Type">
                <option value="Solar">Solar</option>
                <option value="Wind">Wind</option>
                <option value="Geothermal">Geothermal</option>
            </select>
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InsertPoint.longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InsertPoint.longitude)
            @Html.ValidationMessageFor(model => model.InsertPoint.longitude)
        </div>
 
               <div class="editor-label">
            @Html.LabelFor(model => model.InsertPoint.latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InsertPoint.latitude)
            @Html.ValidationMessageFor(model => model.InsertPoint.latitude)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
